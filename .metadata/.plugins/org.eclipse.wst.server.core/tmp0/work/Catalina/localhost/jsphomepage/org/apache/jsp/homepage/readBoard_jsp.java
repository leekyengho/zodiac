/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2016-12-01 18:16:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.homepage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.*;
import java.text.SimpleDateFormat;

public final class readBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script >\r\n");
      out.write("<!--\r\n");
      out.write("function deleteConfirm(num) {\r\n");
      out.write("\tok = confirm(\"삭제하시겠습니까?\");\r\n");
      out.write("\tif (ok) {\r\n");
      out.write("\t\tlocation.href = \"passwordBoard.jsp?num=\" + num ;\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\t\t\t\r\n");
      out.write("}\r\n");
      out.write("-->\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String name = ""; 
		String email = "";
		String regdate = "";
		String hit = "";
		String title = ""; 
		String content = "";
		
		
		String num = request.getParameter("num");
		
		if (num != null) {	
			int inum = Integer.parseInt(num);
			BoardMgr brddb = new BoardMgr(); 
			brddb.updateHit(inum);
			BoardBean brd = brddb.getBoard(inum); 
			
			name = brd.getName();
			email = brd.getEmail();
			SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			regdate = df.format( brd.getRegdate());
			hit = Integer.toString( brd.getHit());
			title = brd.getTitle();
			content = brd.getContent();
		};
	
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("<h2>게시판 보기 프로그램 </h2> <hr>\r\n");
      out.write("\r\n");
      out.write("<div align=center>\r\n");
      out.write("<table width=700 border=0 cellspacing=0 cellpadding=7>\r\n");
      out.write(" <tr><td align=center>\r\n");
      out.write(" \t <table border=0>\r\n");
      out.write(" \t   <tr>\r\n");
      out.write(" \t    <td>\r\n");
      out.write("\t\t\t<table width=650 border=1 cellspacing=0 cellpadding=5 >\r\n");
      out.write("\t\t\t    <tr>\r\n");
      out.write("\t\t\t     <td width=100 bgcolor=papayawhip align=left>이 름  </td>\r\n");
      out.write("\t\t\t     <td width=180 align=left>");
      out.print(name );
      out.write(" </td>\r\n");
      out.write("\t\t\t     <td width=100 bgcolor=papayawhip align=left>전자메일 </td>\r\n");
      out.write("\t\t\t     <td align=left >");
      out.print(email );
      out.write("</td>\r\n");
      out.write("\t\t\t    </tr>\t\r\n");
      out.write("\t\t\t    <tr>\r\n");
      out.write("\t\t\t     <td width=100 bgcolor=papayawhip align=left>작성일 </td>\r\n");
      out.write("\t\t\t     <td width=180 align=left>");
      out.print(regdate );
      out.write(" </td>\r\n");
      out.write("\t\t\t     <td width=100 bgcolor=papayawhip align=left>조회수</td>\r\n");
      out.write("\t\t\t     <td align=left>");
      out.print(hit );
      out.write("</td>\r\n");
      out.write("\t\t\t    </tr>\t\r\n");
      out.write("\t\t\t\t<tr >\r\n");
      out.write("\t\t\t     <td width=100  bgcolor=papayawhip align=left>제 목 </td>\r\n");
      out.write("\t\t\t     <td colspan=3 align=left>");
      out.print(title );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t    <tr height=300><td colspan=4 align=left valign=top>");
      out.print(content);
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t <td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t     <td height=20 colspan=4></td>\r\n");
      out.write("\t    </tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t     <td colspan=4>\r\n");
      out.write("\t  \t\t<input type=button value=\"수정\" onClick=\"location.href='editBoard.jsp?num=");
      out.print(num );
      out.write("'\">\r\n");
      out.write("\t    \t<input type=button value=\"삭제\" onClick=\"deleteConfirm(");
      out.print(num);
      out.write(")\"> \r\n");
      out.write("\t\t\t<!-- 목록보기 버튼은 listboard.jsp로 이동 -->\r\n");
      out.write("\t\t\t<input type=button value=\"목록보기\" onClick=\"location.href='listBoard.jsp'\">\r\n");
      out.write("\t\t </td>\r\n");
      out.write("\t    </tr> \r\n");
      out.write("   \t</table>  \t\r\n");
      out.write("  </td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
