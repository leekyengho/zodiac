/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2016-11-30 07:52:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.homepage.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Vector;
import board.*;
import java.text.SimpleDateFormat;

public final class listBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h2>게시판 리스트 </h2>\r\n");
      out.write("<hr>  \r\n");
      out.write("<center>\r\n");
      out.write("\t");
 
		BoardMgr brddb = new BoardMgr();	 	
		Vector<BoardBean> list = brddb.getBoardList(); 
	   	int counter = list.size();
	   	int row = 0;
	   	
	   	if (counter > 0) {
	
      out.write("\r\n");
      out.write("    <table width=800  cellpadding=3 cellspacing=3 >\r\n");
      out.write("    \r\n");
      out.write("    <tr>\r\n");
      out.write("       <th width=60 bgcolor=lightgray><font color=blue><b>번호</b></font></th>\r\n");
      out.write("       <th width=430 bgcolor=lightgray><font color=blue><b>제목</b></font></th>\r\n");
      out.write("       <th width=80 bgcolor=lightgray><font color=blue><b>작성자</b></font></th>\r\n");
      out.write("       <th width=170 bgcolor=lightgray><font color=blue><b>작성일</b></font></th>\r\n");
      out.write("       <th width=60 bgcolor=lightgray><font color=blue><b>조회수</b></font></th>\r\n");
      out.write("    </tr>\r\n");
      out.write("\t");

		//게시 등록일을 2010-3-15 10:33:21 형태로 출력하기 위한 클래스 
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		for( BoardBean brd : list ) {
			//홀짝으로 다르게 색상 지정
			String color = "papayawhip";
			if ( ++row % 2 == 0 ) color = "white"; 
	
      out.write("\r\n");
      out.write("    <tr bgcolor=");
      out.print(color );
      out.write(" \r\n");
      out.write("\t\tonmouseover=\"this.style.backgroundColor='SkyBlue'\"\r\n");
      out.write("    \tonmouseout=\"this.style.backgroundColor='");
      out.print(color );
      out.write("'\">\r\n");
      out.write("\t\t<!-- 수정과 삭제를 위한 링크로 id를 전송 -->\r\n");
      out.write("       <td align=center>");
      out.print( brd.getNum());
      out.write("</td>\r\n");
      out.write("       <td align=left><a href=\"template.jsp?page=/board/readBoard&num=");
      out.print( brd.getNum());
      out.write('"');
      out.write('>');
      out.print( brd.getTitle() );
      out.write("</a></td>\r\n");
      out.write("       <td align=center>");
      out.print( brd.getName() );
      out.write("</td>\r\n");
      out.write("\t\t<!-- 게시 작성일을 2010-3-15 10:33:21 형태로 출력 -->\r\n");
      out.write("       <td align=center>");
      out.print( df.format(brd.getRegdate()) );
      out.write("</td>\r\n");
      out.write("       <td align=center>");
      out.print( brd.getHit() );
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("\t");

	    }  
	
      out.write("\r\n");
      out.write("\t</table>\r\n");
 	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr width=80%>\r\n");
      out.write("<p>조회된 게시판 목록 수가 ");
      out.print(counter);
      out.write("개 입니다.\r\n");
      out.write("<br><br>\r\n");
      out.write("<form name=form method=post action=template.jsp?page=/board/editBoard>\r\n");
      out.write("      <input type=submit value=\"글쓰기\"> \r\n");
      out.write("</form>\r\n");
      out.write("</center>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
