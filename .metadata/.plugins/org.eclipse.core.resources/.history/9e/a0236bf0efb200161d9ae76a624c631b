package ch10;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;

public class RegisterMgrPool {
	
	private DBConnectionMgr pool = null;
	private Connection con = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	
	public RegisterMgrPool() {
		try{
			pool = DBConnectionMgr.getInstance();
 	   	}catch(Exception e){
 	   		System.out.println("Error : 커넥션 얻어오기 실패");
 	   	}
     }//MemberMgrPool()
 
    public Vector<RegisterBean> getMemberList() {   
       String sql = null;
	   Vector<RegisterBean> vecList = new Vector<RegisterBean>();	   
	   
       try {
          con = pool.getConnection();
          sql = "select * from tblRegister";
          pstmt = con.prepareStatement(sql);
          rs = pstmt.executeQuery();
		  while (rs.next()) {
			 RegisterBean bean = new RegisterBean();
			 bean.setId (rs.getString("id"));
			 bean.setPasswd (rs.getString("passwd"));
			 bean.setName (rs.getString("name"));
			 bean.setNum1 (rs.getString("num1"));
			 bean.setNum2 (rs.getString("num2"));
			 bean.setEmail (rs.getString("email"));
			 bean.setPhone (rs.getString("phone"));
			 bean.setZipcode (rs.getString("zipcode"));
			 bean.setAddress (rs.getString("address"));
			 bean.setJob (rs.getString("job"));
             vecList.add(bean);
          }
       } catch (Exception ex) {
          System.out.println("Exception" + ex);
       } finally {
	      pool.freeConnection(con, pstmt, rs);
       }
       return vecList;
    }
    
    public boolean insertMember(RegisterBean bean){
    	String sql = null;
    	boolean flag = false;
    	try{
    		con = pool.getConnection();
    		sql = "insert tblRegister(id,passwd,name,num1,num2,email,"
    				+ " phone, zipcode, address, job)"
    				+ " values(?,?,?,?,?,?,?,?,?,?)";
    		
    		pstmt = con.prepareStatement(sql);
    		pstmt.setString(1, bean.getId());
    		pstmt.setString(2, bean.getPasswd());
    		pstmt.setString(3, bean.getName());
    		pstmt.setString(4, bean.getNum1());
    		pstmt.setString(5, bean.getNum2());
    		pstmt.setString(6, bean.getEmail());
    		pstmt.setString(7, bean.getPhone());
    		pstmt.setString(8, bean.getZipcode());
    		pstmt.setString(9, bean.getAddress());
    		pstmt.setString(10, bean.getJob());
    		
    		if(pstmt.executeUpdate() == 1)	flag = true;
    	}
    	catch(Exception e){
    		e.printStackTrace();
    	}finally{
    		pool.freeConnection(con, pstmt);
    	}
    	return flag;
    }//insertMember메소드   
    
    public boolean deleteMember(String id)
    {
    	String sql = null;
    	boolean flag = false;
    	try{
    		con = pool.getConnection();
    		sql = "delete from tblRegister where id = ?";
    		pstmt = con.prepareStatement(sql);
    		pstmt.setString(1,  id);
    		
    		if(pstmt.executeUpdate() > 0)	flag = true;
    	}	catch(Exception e){
    		e.printStackTrace();
    	}finally{
    		pool.freeConnection(con, pstmt);
    	}
    	
    	return flag;
    }
    
    public boolean modifyMember(RegisterBean bean, String id) {
    	String sql = null;
    	boolean flag = false;
    	try{
    		con = pool.getConnection();
    		sql = "update tblRegister set passwd =?,name =?,num1=?,num2=?,email=?,"
    				+ " phone=?, zipcode=?, address=?, job=? where id = ?";
    		pstmt = con.prepareStatement(sql);
    		pstmt.setString(10, id);
    		pstmt.setString(1, bean.getPasswd());
    		pstmt.setString(2, bean.getName());
    		pstmt.setString(3, bean.getNum1());
    		pstmt.setString(4, bean.getNum2());
    		pstmt.setString(5, bean.getEmail());
    		pstmt.setString(6, bean.getPhone());
    		pstmt.setString(7, bean.getZipcode());
    		pstmt.setString(8, bean.getAddress());
    		pstmt.setString(9, bean.getJob());
    		if(pstmt.executeUpdate()>0) flag = true;
    	}	catch(Exception e){
    		e.printStackTrace();
    	}finally{
    		pool.freeConnection(con, pstmt);
    	}
    	return flag;
    	
    }
    
    public Vector<RegisterBean> getSearchMemberList(String name) {   
        String sql = null;
        
       
 	   Vector<RegisterBean> vecList = new Vector<RegisterBean>();	   
 	  
        try {
        	
           con = pool.getConnection();
           sql = "select * from tblRegister where name ='"+name+"';"; 
           pstmt = con.prepareStatement(sql);
           rs = pstmt.executeQuery();
           
           
 		  while (rs.next()) {
 			 RegisterBean bean = new RegisterBean();
 			 bean = new RegisterBean();
 			 bean.setId (rs.getString("id"));
 			 bean.setPasswd (rs.getString("passwd"));
 			 bean.setName (rs.getString("name"));
 			 bean.setNum1 (rs.getString("num1"));
 			 bean.setNum2 (rs.getString("num2"));
 			 bean.setEmail (rs.getString("email"));
 			 bean.setPhone (rs.getString("phone"));
 			 bean.setZipcode (rs.getString("zipcode"));
 			 bean.setAddress (rs.getString("address"));
 			 bean.setJob (rs.getString("job"));
             vecList.add(bean);
           }
        } catch (Exception ex) {
           System.out.println("Exception" + ex);
        } finally {
 	      pool.freeConnection(con, pstmt, rs);
        }
        return vecList;
     }
 }//class